#+title: random

* test
Here's some random python because I'm bored. Here's some more text to extend this paragraph to be longer, so I can see the effects of doing that.

And here's another paragraph!
#+begin_src python :results output
from datetime import datetime
print(datetime.now())
print('hello'*100)
#+end_src

#+RESULTS:
: 2021-07-15 12:33:26.814574
: hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello

And here's some elisp too:
#+begin_src emacs-lisp
(message "hi")
#+end_src

#+RESULTS:
: hi

Here's some mathjax-rendered LaTeX:
$\sum_{i=0}^{10} x$
* Fibonacci squares

Random thought: I should write some python code to generate these squares.
游릲游릲游릲游릲游릲游릲游릲游릲游릴游릴游릴游릴游릴
游릲游릲游릲游릲游릲游릲游릲游릲游릴游릴游릴游릴游릴
游릲游릲游릲游릲游릲游릲游릲游릲游릴游릴游릴游릴游릴
游릲游릲游릲游릲游릲游릲游릲游릲游릴游릴游릴游릴游릴
游릲游릲游릲游릲游릲游릲游릲游릲游릴游릴游릴游릴游릴
游릲游릲游릲游릲游릲游릲游릲游릲游린游릳游릱游릱游릱
游릲游릲游릲游릲游릲游릲游릲游릲游릵游릵游릱游릱游릱
游릲游릲游릲游릲游릲游릲游릲游릲游릵游릵游릱游릱游릱

#+begin_src python :results output
import numpy as np

def fibonacci_squares_arr(n):
    if n < 0:
        raise Exception('nope.')
    if n == 0:
        return np.array([])
    if n == 1:
        return np.array([[n]])
    else:
        old = fibonacci_squares_arr(n - 1)
        side_len = max(old.shape)
        nxt = np.full((side_len, side_len), n)
        elems = (old, nxt) if n // 2 % 2 == 0 else (nxt, old)
        return np.concatenate(elems, axis=int(n % 2 == 0))

def fibonacci_squares(n):
    arr = fibonacci_squares_arr(n)
    chars = list('游린游릱游릲游릳游릴游릵游릶')
    fib_str = '\n'.join([''.join([chars[(elem - 1) % len(chars)]
                                  for elem in row]) for row in arr])
    return fib_str
print(fibonacci_squares(8))
#+end_src

#+RESULTS:
#+begin_example
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游릶游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릲游릲游릳游릳游릳游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릲游릲游릳游릳游릳游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릱游린游릳游릳游릳游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릴游릴游릴游릴游릴游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릴游릴游릴游릴游릴游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릴游릴游릴游릴游릴游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릴游릴游릴游릴游릴游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
游릵游릵游릵游릵游릵游릵游릵游릵游릴游릴游릴游릴游릴游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린游린
#+end_example
